This paper compared the quality of releases for Firfox from 2011 to 2012, a period where the the project tranistioned to
a shorter relese period. The goal of this comparison is to examine if any discernable difference in the quality of the
releases could be measured. 

The paper cites new Agile or XP trends pushing companies to move to generally shorter release dates. The core claim is
the with shorter release periods, planning becomes eaiser, QA can be implemented more earlier in the process and
customers can get critical bug fixes sooner. The claims of higher quality have not been empircally proven and studies
have given mixed results when trying to measure the change. Firfox was used for this study since there was relatively
little change in aspects other then the release cycle in the measured period. Metrics monitored where uptime, number of post
release bugs and daily crash counts. The goals of these metrics was to answer the questions do shorter release affect
quality, does it affect the fixing of bugs, and does it affect adoption to software updates. 

Many of the metrics were measured via a built in auto crash reporter tool that comes withh all versions of the browser.
QA staff tie bugs to the crash reporter data, or bugs can be files manually. The bug data was also extensively used in
this paper, and the data comes from Firefoxes bug reporting framework bugzilla. 

This paper study all multiple version of firfox from Firfox 3.6 to 9 across the switch from Traditional devleopment
model to rapid release models. 

In relation to the first question of weather the change in developement model affects the soft ware quality : The paper found that there were no significant changes in the number of post release bugs, there is no significant
decrease in daily crash count but there is a significant decrease in uptime in a rapid release model. 

In relation to the second question of weather the change in development model affects the length of bux fixes : The
paper found in a rapid release model the number of bugs fix ed during the testing period we significantly loer than in
the traditional model. Bugs are fixed faster under a rapid release model.

In relation to the final question of weather the release model affect the adoption of software updates. The paper found
in a rapid release model, users switch fast to newer versions then in the traditional model (New version of FF had auto
update and update reminders that did not exist, this doesnt seem to be corrected for). 
